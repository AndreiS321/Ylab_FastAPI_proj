version: "3.8"
services:
  database:
    image: postgres:15.1-alpine
    container_name: db
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile_app
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    command: [ "/app/docker/app.sh" ]

  celery_beat:
    container_name: celery_beat
    build:
      context: .
      dockerfile: Dockerfile_app
    env_file:
      - .env
    depends_on:
      - rabbitmq
    command: [ "/app/docker/celery_beat.sh" ]

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile_app
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    command: [ "/app/docker/celery.sh" ]

  redis:
    image: redis:7
    container_name: redis
    command: --port 6379
    expose:
      - 6379

  rabbitmq:
    image: rabbitmq:3.9.29-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}

  test_database:
    image: postgres:15.1-alpine
    container_name: test_database
    command: -p 4321
    expose:
      - 4321
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -p 4321 -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  tests:
    container_name: tests_app
    build:
      context: .
      dockerfile: Dockerfile_tests

    env_file:
      - .env
    ports:
      - 8888:8000
    depends_on:
      test_database:
        condition: service_healthy
    command: [ "/tests/docker/tests.sh" ]
